# version: '3' the attribute `version` is obsolete, it will be ignored, please remove it to avoid potential confusion"

services:
  kafka-zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: kafka-zookeeper
    ports:
      - "2181:2181"
    networks:
      - urbangeopulse-net
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka-broker:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-broker
    depends_on:
      - kafka-zookeeper
    networks:
      - urbangeopulse-net
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'kafka-zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TOOLS_LOG4J_LOGLEVEL: ERROR

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka-broker
      - kafka-zookeeper
    networks:
      - urbangeopulse-net
    ports:
      - 7070:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka-broker
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-broker:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: kafka-zookeeper:2181
      LOGGING_LEVEL_ROOT: error
      LOGGING_LEVEL_COM_PROVECTUS: error
    restart: unless-stopped
    # netstat -ano | findstr :7070
    # tasklist /fi "pid eq 99999" /fo list

  redis-server:
    image: redis:7.0-alpine
    networks:
      - urbangeopulse-net
    ports:
      - 6379:6379

  postgis-server-nyc:
    image: postgis/postgis:15-3.4
    command: postgres -c max_connections=500
    ports:
      - 5433:5432
    networks:
      - urbangeopulse-net
    volumes:
      - ${LOCALAPPDATA}\Temp\postgreSQL_nyc:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=nyc

  pgadmin-server:
    image: dpage/pgadmin4
    ports:
      - 8085:80
    networks:
      - urbangeopulse-net
    volumes:
      - ${LOCALAPPDATA}\Temp\pgadmin:/var/lib/pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=pgadminpass

  mongodb-server:
    image: mongo:6.0
    ports:
      - 27017:27017
    networks:
      - urbangeopulse-net
    volumes:
      - ${LOCALAPPDATA}\Temp\mongodb:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pass

  mongo-express:
    image: mongo-express:1.0.0-alpha.4
    ports:
      - 8083:8081
    networks:
      - urbangeopulse-net
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=user
      - ME_CONFIG_MONGODB_ADMINPASSWORD=pass
      - ME_CONFIG_MONGODB_URL=mongodb://user:pass@mongodb-server:27017/
    depends_on:
      - mongodb-server
  
  # Access Mongo Express at http://localhost:8083
  # Username: user
  # Password: pass

  # metrics/
  # ├── prometheus.yml
  # └── grafana/
  #     |── dashboards/
  #     |    └── kafka-dashboard.json
  #     └── provisioning/
  #         |── dashboards/
  #         |    └── kafka-dashboards.yml
  #         └── datasources/
  #            └── prometheus.yml

  # kafka-exporter scrapes Kafka metrics (including consumer group lag, topic message counts)
  # and exposes them in Prometheus format. It automatically monitors all topics and consumer groups.
  # This service feeds data to Prometheus.
  kafka-exporter:
    image: danielqsj/kafka-exporter:latest
    ports:
      - "9308:9308"
    networks:
      - urbangeopulse-net
    command: --kafka.server=kafka-broker:9092
    depends_on:
      - kafka-broker

  # Prometheus collects and stores metrics from kafka-exporter.
  # It provides time-series storage and querying capabilities.
  # This service provides data for Grafana dashboards.
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    networks:
      - urbangeopulse-net
    volumes:
      - ./metrics/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - kafka-exporter

  # Grafana provides visualization dashboards for Kafka metrics collected by Prometheus.
  # It offers an intuitive UI to build graphs and alerts for monitoring Kafka performance.
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - urbangeopulse-net
    environment:
      GF_INSTALL_PLUGINS: grafana-piechart-panel,grafana-worldmap-panel
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - ./metrics/grafana/provisioning:/etc/grafana/provisioning
      - ./metrics/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus

networks:
  urbangeopulse-net:
    external:
      name: urbangeopulse-net
